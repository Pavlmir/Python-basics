# 1. Поработайте с переменными, создайте несколько,
# выведите на экран, запросите у пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.
def lesson_1():
    name = input("Введите имя:")
    old = int(input("Ваш возвраст:"))
    print(f"Вас зовут {name}, вам {old} лет")

    x1 = int(input(f"{name} введи 1-ю переменную:"))
    x2 = int(input(f"{name} введи 2-ю переменную:"))
    x3 = int(input(f"{name} введи 3-ю переменную:"))
    print(f"Сумма переменных = {x1 + x2 + x3}")


# 2. Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.
def lesson_2():
    sec = int(input("Введите время в секундах:"))
    h = sec // 3600
    m = (sec % 3600) // 60
    s = (sec % 3600) % 60
    print(f"{h:0>2d}:{m:0>2d}:{s:0>2d}")


# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
# 3 + 33 + 333 = 3*1+0 + 3*10+3 + 3*100+33
def lesson_3():
    num = int(input("Введите число:"))
    sum_num = 0
    numbers = []
    str_num = ""
    while len(numbers) != num:
        str_num = str_num + str(num)
        sum_num += int(str_num)
        numbers.append(str_num)

    print(f"Считаем: {' + '.join(numbers)} = {sum_num:,}".replace(',', ' '))


# 4. Пользователь вводит целое положительное число.
# Найдите самую большую цифру в числе. Для решения используйте цикл while и арифметические операции.
def lesson_4():
    num_start = int(input("Введите целое положительное число:"))

    num = num_start
    max_num = 0
    while 0 != num:
        i = num % 10
        num = num // 10
        if max_num < i:
            max_num = i

    print(f"Самая большая цифра в числе {num_start} = {max_num}")


# 5. Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма (прибыль — выручка больше издержек,
# или убыток — издержки больше выручки). Выведите соответствующее сообщение.
# Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.
def lesson_5():
    revenues = int(input("Введите значение выручки фирмы:"))
    costs = int(input("Введите значение издержек фирмы:"))
    if revenues >= costs:
        profit = revenues - costs
        profitability_revenue = profit / revenues * 100
        print(f"Фирма отработала с прибылью = {profit}")
        print(f"Рентабельность выручки = {profitability_revenue:.2f}")
        number_employees = int(input("Введите численность сотрудников фирмы:"))
        profit_employees = profit / number_employees
        print(f"Прибыль фирмы в расчете на одного сотрудника = {profit_employees:.2f}")
    else:
        loss = costs - revenues
        print(f"Фирма отработала с убытком = {loss}")


# 6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10 % относительно предыдущего.
# Требуется определить номер дня, на который общий результат спортсмена составить не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
# Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.
def lesson_6():
    a = int(input("Результат в первый день (км):"))
    b = int(input("Общий результат спортсмена (км):"))

    step = a
    days = []
    while step <= b:
        days.append(step)
        step = step + step * 0.1
        if step > b:
            days.append(step)

    print(f"Номер дня = {len(days)}")

if __name__ == "__main__":
    lesson_1()